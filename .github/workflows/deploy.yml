name: 'Deploy'

on:

  # Allow for manual invocation
  workflow_dispatch:

jobs:
#  predeploy:
#    uses: ./.github/workflows/predeploy.yml

  deploy-pypi:
#    needs: predeploy
    runs-on: ubuntu-latest
    env:
      FLIT_USERNAME: manager.flypipe
      FLIT_INDEX_URL: https://test.pypi.org/legacy/

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Dependencies
        uses: './.github/actions/setup-dependencies'
#      - name: Download version file
#        uses: actions/download-artifact@v3
#        with:
#          name: flypipe/version.txt
#      - name: Store version number
#        run: echo "VERSION_NUMBER=$(cat flypipe/version.txt)" >> $GITHUB_ENV
      - name: Store version number
        run: echo "VERSION_NUMBER=0.0.11" >> $GITHUB_ENV
      - name: TEMP
        run: echo "0.0.11" > flypipe/version.txt
      - name: Create new branch
        run: |
          git config --global user.email "flypipe@dummy.com"
          git config --global user.name "flypipe"
          git checkout -b "release/${{ env.VERSION_NUMBER }}"
          git add flypipe/version.txt
          git commit -m 'chore: update version file'
          git push origin "release/${{ env.VERSION_NUMBER }}"
      - name: Upload to pypi
        run: |
          flit publish
        env:
          FLIT_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
      - name: Upload Wheel
        uses: actions/upload-artifact@v3
        with:
          name: flypipe-${{ env.VERSION_NUMBER }}-py3-none-any.whl
          path: ./dist/flypipe-${{ env.VERSION_NUMBER }}-py3-none-any.whl

  build-docs:
    needs: deploy-pypi
    uses: ./.github/workflows/build-docs.yml
