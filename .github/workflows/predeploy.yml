# Prepare for deployment:
# - run verification to double check the code quality
# - calculate the new prospective version
# - calculate the new prospective changelog
# By calculating the version/changelog here instead of in the deployment job we can double check these artifacts to
# ensure they are looking fine prior to releasing.

name: 'Prepare for deployment'

on:
  push:
    branches: [ "main" ]

  # Allow for manual invocation
  workflow_dispatch:

  # Allow pipeline to be invoked from other pipelines
  workflow_call:

jobs:
  verification:
    uses: ./.github/workflows/verification.yml

  build-wheel:
    needs: verification
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Fetch branches
        run: git fetch
      - name: Setup Dependencies
        uses: './.github/actions/setup-dependencies'
      - name: Calculate new version number
        run: echo "VERSION_NUMBER=$(python scripts/calculate_version.py)" >> $GITHUB_ENV
      - name: Set version
        run: echo ${{ env.VERSION_NUMBER }} > flypipe/version.txt
      - name: Store version number
        run: echo "VERSION_NUMBER=$(cat flypipe/version.txt)" >> $GITHUB_ENV
      - name: Upload version file
        uses: actions/upload-artifact@v3
        with:
          name: version.txt
          path: ./flypipe/version.txt
      - name: Calculate changelog for new version
        run: python scripts/generate_changelog.py
        env:
          JIRA_USER: ${{ secrets.JIRA_USER }}
          JIRA_TOKEN: ${{ secrets.JIRA_TOKEN }}
      - name: Upload changelog file
        uses: actions/upload-artifact@v3
        with:
          name: changelog.txt
          path: ./changelog.txt
      # Build and upload the wheel so we can access the wheel without having to upload it to pypi
      - name: Build wheel
        run: flit build
      - name: Upload wheel
        uses: actions/upload-artifact@v3
        with:
          name: flypipe-${{ env.VERSION_NUMBER }}-py3-none-any.whl
          path: ./dist/flypipe-${{ env.VERSION_NUMBER }}-py3-none-any.whl
